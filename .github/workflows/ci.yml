name: CI

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  id-token: write
  contents: read

env:
  GCP_PROJECT: spry-effect-464207-v9

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.CI_DB_PASSWORD }}
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      NODE_ENV: test
      DATABASE_URL: postgresql://postgres:${{ secrets.CI_DB_PASSWORD }}@localhost:5432/postgres?schema=public
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
      FRONT_ORIGIN: http://localhost:5173
      CLIENT_ID: dummy
      CLIENT_SECRET: dummy
      REDIRECT_URL: http://localhost:3000/api/calendars/oauth2callback

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install deps
        run: npm ci

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Push schema to DB (CI)
        run: npx prisma db push --accept-data-loss

      - name: Lint
        run: npm run lint --if-present

      - name: Test
        run: npm test -- --runInBand

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - run: npm ci
      - run: npm run build

  docker:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Debug OIDC claims (GitHub → Google)
        run: |
          set -euo pipefail
          sudo apt-get update -y && sudo apt-get install -y jq
          URL="${ACTIONS_ID_TOKEN_REQUEST_URL}&audience=//iam.googleapis.com/projects/962157203540/locations/global/workloadIdentityPools/my-pool/providers/my-github"
          TOKEN_JSON=$(curl -sS -H "Authorization: Bearer ${ACTIONS_ID_TOKEN_REQUEST_TOKEN}" "$URL")
          echo "Raw ID token response keys:" && echo "$TOKEN_JSON" | jq 'keys'
          TOKEN=$(echo "$TOKEN_JSON" | jq -r '.value')
          echo "Decoded OIDC payload ↓"
          PAYLOAD=$(echo "$TOKEN" | cut -d. -f2 | tr '_-' '/+' | base64 -d 2>/dev/null || true)
          echo "$PAYLOAD" | jq .

      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/962157203540/locations/global/workloadIdentityPools/my-pool/providers/my-github
          audience: "//iam.googleapis.com/projects/962157203540/locations/global/workloadIdentityPools/my-pool/providers/my-github"
          service_account: ci-deployer@spry-effect-464207-v9.iam.gserviceaccount.com
          project_id: spry-effect-464207-v9

      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: spry-effect-464207-v9

      - run: gcloud auth list && gcloud config list

      - run: gcloud auth configure-docker europe-west9-docker.pkg.dev --quiet

      - uses: docker/setup-buildx-action@v3

      - name: Build & push backend
        uses: docker/build-push-action@v6
        with:
          context: .
          file: cloudrun/Dockerfile.express
          push: true
          tags: europe-west9-docker.pkg.dev/${{ env.GCP_PROJECT }}/containers/express-api:latest

      - name: Build & push frontend
        uses: docker/build-push-action@v6
        with:
          context: .
          file: cloudrun/Dockerfile.react
          push: true
          tags: europe-west9-docker.pkg.dev/${{ env.GCP_PROJECT }}/containers/react-app:latest
