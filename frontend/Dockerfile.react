# Étape 1 : Construction de l'application avec Node.js (Node 22 compatible Vite 7)
FROM node:22-alpine AS build

# Définit le dossier de travail dans le conteneur
WORKDIR /app

# Copie uniquement les manifestes pour tirer parti du cache Docker
COPY package*.json ./

# Installe les dépendances (ci si lockfile présent, sinon install)
RUN if [ -f package-lock.json ]; then \
      npm ci --no-audit --no-fund; \
    else \
      npm install --no-audit --no-fund; \
    fi

# Copie le reste du projet
COPY . .

# Build de production (Vite)
ENV NODE_ENV=production
RUN npm run build

# Étape 2 : Serveur de production avec Nginx
FROM nginx:stable-alpine

# Copie les fichiers générés par le build dans le dossier HTML de Nginx
COPY --from=build /app/dist /usr/share/nginx/html

# Remplace la configuration par défaut de Nginx par une configuration personnalisée (SPA, etc.)
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Ouvre le port 80 pour accéder à l'application
EXPOSE 80

# Démarre Nginx en mode non-démon (requis pour que le conteneur reste actif)
CMD ["nginx", " -g", "daemon off;"]
